package view;

import controller.SiteController;
import controller.Youtube;
import java.awt.Color;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.net.UnknownHostException;
import java.util.ArrayList;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;
import model.Site;
import model.Video;
import view.components.ProgressBarTask;
import view.components.SitesComboBoxModel;

/**
 *
 * @author edisonarango
 */
public class VideoForm extends javax.swing.JDialog implements PropertyChangeListener {
    
    private SitesComboBoxModel sitesModel;
    private MainFrame parent;
    private Border defaultBorder;
    private Video videoToEdit = null;
    /**
     * Creates new form VideoForm
     */
    public VideoForm(MainFrame parent, ArrayList<Site> sites) {
        super(parent);
        this.parent = parent;
        this.sitesModel = new SitesComboBoxModel(sites);
        initComponents();
        this.setLocationRelativeTo(parent);
        defaultBorder = videoIDSite.getBorder();
    }
    
     public VideoForm(MainFrame parent, ArrayList<Site> sites, Video videoToEdit) {
        super(parent);
        this.parent = parent;
        this.videoToEdit = videoToEdit;
        this.sitesModel = new SitesComboBoxModel(sites);
        initComponents();
        this.setLocationRelativeTo(parent);
        defaultBorder = videoIDSite.getBorder();
        loadVideoToEdit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        videoFormTitlePanel = new javax.swing.JPanel();
        formTitle = new javax.swing.JLabel();
        videoFormLabelLocal = new javax.swing.JLabel();
        videoFormLabelYoutube = new javax.swing.JLabel();
        videoFormSeparator1 = new javax.swing.JSeparator();
        videoFormSeparator2 = new javax.swing.JSeparator();
        videoFormVideoIDLabel = new javax.swing.JLabel();
        videoIDSite = new javax.swing.JTextField();
        videoFormSiteLabel = new javax.swing.JLabel();
        site = new javax.swing.JComboBox();
        videoFormVideoYoutubeLabel = new javax.swing.JLabel();
        videoIDYoutube = new javax.swing.JTextField();
        videoFormSeparator3 = new javax.swing.JSeparator();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        progressBar = new javax.swing.JProgressBar();
        titleLabel = new javax.swing.JLabel();
        titleField = new javax.swing.JTextField();
        optionalLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModal(true);
        setResizable(false);

        videoFormTitlePanel.setBackground(new java.awt.Color(244, 67, 54));

        formTitle.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        formTitle.setForeground(new java.awt.Color(255, 255, 255));
        formTitle.setText("Add Video");

        javax.swing.GroupLayout videoFormTitlePanelLayout = new javax.swing.GroupLayout(videoFormTitlePanel);
        videoFormTitlePanel.setLayout(videoFormTitlePanelLayout);
        videoFormTitlePanelLayout.setHorizontalGroup(
            videoFormTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(videoFormTitlePanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(formTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        videoFormTitlePanelLayout.setVerticalGroup(
            videoFormTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(videoFormTitlePanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(formTitle)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        videoFormLabelLocal.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        videoFormLabelLocal.setText("Local");

        videoFormLabelYoutube.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        videoFormLabelYoutube.setText("Youtube");

        videoFormVideoIDLabel.setText("Video ID:");

        videoFormSiteLabel.setText("Site:");

        site.setModel(sitesModel);

        videoFormVideoYoutubeLabel.setText("Video ID:");

        saveButton.setText("Save");
        saveButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        saveButton.setSelected(true);
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        titleLabel.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        titleLabel.setText("Title:");

        optionalLabel.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        optionalLabel.setText(" Optional (Leave blank for youtube video title)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(videoFormTitlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(videoFormSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(videoFormSeparator2)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(videoFormSiteLabel)
                            .addComponent(videoFormVideoIDLabel)
                            .addComponent(videoFormLabelYoutube))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(videoIDSite)
                            .addComponent(site, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(videoFormVideoYoutubeLabel)
                        .addGap(18, 18, 18)
                        .addComponent(videoIDYoutube)))
                .addGap(19, 19, 19))
            .addComponent(videoFormSeparator3)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(cancelButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveButton)
                .addGap(16, 16, 16))
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(videoFormLabelLocal)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(titleLabel)
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(optionalLabel)
                            .addComponent(titleField, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(videoFormTitlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titleLabel)
                    .addComponent(titleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(optionalLabel)
                .addGap(7, 7, 7)
                .addComponent(videoFormLabelLocal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(videoFormSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(videoFormVideoIDLabel)
                    .addComponent(videoIDSite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(videoFormSiteLabel)
                    .addComponent(site, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(videoFormLabelYoutube)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(videoFormSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(videoFormVideoYoutubeLabel)
                    .addComponent(videoIDYoutube, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(videoFormSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(cancelButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        ProgressBarTask progressTask = new ProgressBarTask(progressBar);
        progressTask.addPropertyChangeListener(this);
        progressTask.execute();
        JDialog self = this;
        
        String idVideoSite = this.videoIDSite.getText();
        String idVideoYoutube = this.videoIDYoutube.getText();
        new Thread(new Runnable(){
            @Override
            public void run() {
                try {
                    Site selectedSite = (Site)sitesModel.getSelectedItem();
                    //Check if field is empty
                    if (idVideoSite.equals("")){
                        progressTask.finish();
                        videoIDSite.setBorder(new LineBorder(Color.RED));
                        videoIDSite.requestFocus();
                        return;
                    }
                    else {
                      videoIDSite.setBorder(defaultBorder);  
                    }
                    //Check if field is empty
                    if (idVideoYoutube.equals("")){
                        progressTask.finish();
                        videoIDYoutube.setBorder(new LineBorder(Color.RED));
                        videoIDYoutube.requestFocus();
                        return;
                    }
                    progressTask.updateProgress(10);
                    //Check if video exist in site
                    if (!SiteController.siteVideoExist(selectedSite, idVideoSite)) {
                        progressTask.finish();
                        JOptionPane.showMessageDialog(self, "The video does not exist in site", "Error", JOptionPane.WARNING_MESSAGE);
                        videoIDSite.setBorder(new LineBorder(Color.RED));
                        videoIDSite.requestFocus();
                        return;
                    }
                    progressTask.updateProgress(70);
                    // Check if user owns the video
                    if (!Youtube.isMyVideo(idVideoYoutube)) {
                        progressTask.finish();
                        JOptionPane.showMessageDialog(self, "Youtube video id does not match a video of you ", "Error", JOptionPane.WARNING_MESSAGE);
                        videoIDYoutube.setBorder(new LineBorder(Color.RED));
                        videoIDYoutube.requestFocus();
                        return;
                    }
                    progressTask.updateProgress(90);
                    String title = titleField.getText();
                    if (title.equals("")){
                        title = Youtube.getVideoTitle(idVideoYoutube);
                    }
                    if (videoToEdit == null) {
                        parent.createVideo(idVideoSite, title, selectedSite, idVideoYoutube);
                    }
                    else {
                        parent.updateVideo(videoToEdit, title, idVideoSite, selectedSite, idVideoYoutube);
                    }
                    progressTask.finish();
                    self.dispose();
                }
                catch (UnknownHostException ex) {
                    JOptionPane.showMessageDialog(self, "No internet connection, please check", "Error", JOptionPane.ERROR_MESSAGE);
                }
                catch (Exception ex) {
                    progressTask.finish();
                    JOptionPane.showMessageDialog(self, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            }            
        }).start();
    }//GEN-LAST:event_saveButtonActionPerformed

    private void loadVideoToEdit() {
        this.videoIDSite.setText(videoToEdit.getIdVideoSite());
        this.site.setSelectedItem(videoToEdit.getSite());
        this.videoIDYoutube.setText(videoToEdit.getIdVideoYoutube());
        this.formTitle.setText("Update Video");
        this.saveButton.setText("Update");
        if (!videoToEdit.getTitle().equals("---")){
            this.titleField.setText(videoToEdit.getTitle());
        }
    }
    
    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        if ("progress".equals(evt.getPropertyName())) {
            int progress = (Integer) evt.getNewValue();
            if (progress != 0) {
                progressBar.setIndeterminate(false);
            }
            progressBar.setValue(progress);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel formTitle;
    private javax.swing.JLabel optionalLabel;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JButton saveButton;
    private javax.swing.JComboBox site;
    private javax.swing.JTextField titleField;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel videoFormLabelLocal;
    private javax.swing.JLabel videoFormLabelYoutube;
    private javax.swing.JSeparator videoFormSeparator1;
    private javax.swing.JSeparator videoFormSeparator2;
    private javax.swing.JSeparator videoFormSeparator3;
    private javax.swing.JLabel videoFormSiteLabel;
    private javax.swing.JPanel videoFormTitlePanel;
    private javax.swing.JLabel videoFormVideoIDLabel;
    private javax.swing.JLabel videoFormVideoYoutubeLabel;
    private javax.swing.JTextField videoIDSite;
    private javax.swing.JTextField videoIDYoutube;
    // End of variables declaration//GEN-END:variables


}
